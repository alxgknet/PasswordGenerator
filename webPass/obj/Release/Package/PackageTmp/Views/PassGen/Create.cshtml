@model webPass.Models.PassParameterDto
@using CaptchaMvc.HtmlHelpers
@{
    ViewBag.Title = "Create";
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>

@if (@ViewBag.Password != null)
{
    <br />
    <label class="control-label col-md-2" for="generatedPass">Created Password</label>
    <input type="text" value="@ViewBag.Password" id="generatedPass">
    <button onclick="copyText()">Click to copy</button>
}
else
{
    <h2>Generate password</h2>
}

@if (@ViewBag.Error != null)
{
    <h4><font color="red"> Failed with message: @ViewBag.Error </font></h4>
}
    


@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">


        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.webSiteName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.webSiteName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.webSiteName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.userName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.userName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.keyValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.keyValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.keyValue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lengthOfPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lengthOfPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lengthOfPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.useSpecialCharacter, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.useSpecialCharacter)
                    @Html.ValidationMessageFor(model => model.useSpecialCharacter, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Captcha">Please enter Captcha</label>
            <div class="col-md-10">
                    @*@Html.MathCaptcha()*@
                    @Html.Captcha(1)
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    function copyText() {
      /* Get the text field */
      var copyText = document.getElementById("generatedPass");

      /* Select the text field */
      copyText.select();
      copyText.setSelectionRange(0, 99999); /*For mobile devices*/

      /* Copy the text inside the text field */
      document.execCommand("copy");
    }

    $('input[type=submit]').click(function () {
        var clickedBtn = $(this)
         clickedBtn.hide(100);
    });
</script>